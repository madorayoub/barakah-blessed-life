import { useState } from 'react'
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'
import { Button } from '@/components/ui/button'
import { Badge } from '@/components/ui/badge'
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'
import { Download, Share2, FileText, Calendar } from 'lucide-react'
import { format, startOfMonth, endOfMonth, subMonths } from 'date-fns'
import { toast } from '@/hooks/use-toast'

interface ExportReportProps {
  prayerStats: any
  taskStats: any
  achievements: any[]
}

export function ExportReport({ prayerStats, taskStats, achievements }: ExportReportProps) {
  const [selectedPeriod, setSelectedPeriod] = useState('current-month')
  const [exportFormat, setExportFormat] = useState('pdf')
  const [isExporting, setIsExporting] = useState(false)

  const generateReport = () => {
    setIsExporting(true)
    
    // Simulate report generation
    setTimeout(() => {
      const reportData = {
        period: selectedPeriod,
        format: exportFormat,
        prayer: {
          completionRate: prayerStats?.completionRate || 0,
          currentStreak: prayerStats?.currentStreak || 0,
          totalPrayers: prayerStats?.completedPrayers || 0
        },
        tasks: {
          completionRate: taskStats?.completionRate || 0,
          totalCompleted: taskStats?.completedTasks || 0
        },
        achievements: achievements.filter(a => a.earned).length,
        generatedAt: new Date().toISOString()
      }

      // Create downloadable content
      const content = generateReportContent(reportData)
      downloadReport(content, exportFormat)
      
      setIsExporting(false)
      toast({
        title: "Report Generated",
        description: `Your ${exportFormat.toUpperCase()} report has been downloaded successfully.`
      })
    }, 2000)
  }

  const generateReportContent = (data: any) => {
    const currentDate = format(new Date(), 'MMMM yyyy')
    
    if (exportFormat === 'pdf') {
      // In a real app, you'd use a PDF library like jsPDF
      return `
BARAKAH TASKS - SPIRITUAL PROGRESS REPORT
Generated: ${format(new Date(), 'PPP')}
Period: ${currentDate}

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

PRAYER STATISTICS
‚Ä¢ Completion Rate: ${data.prayer.completionRate.toFixed(1)}%
‚Ä¢ Current Streak: ${data.prayer.currentStreak} days
‚Ä¢ Total Prayers Completed: ${data.prayer.totalPrayers}

TASK STATISTICS  
‚Ä¢ Task Completion Rate: ${data.tasks.completionRate.toFixed(1)}%
‚Ä¢ Tasks Completed: ${data.tasks.totalCompleted}

ACHIEVEMENTS
‚Ä¢ Achievements Unlocked: ${data.achievements}

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

"And establish prayer and give zakah and bow with those who bow."
- Quran 2:43

Generated by Barakah Tasks
Your Islamic Productivity Companion
      `
    } else {
      // JSON format
      return JSON.stringify(data, null, 2)
    }
  }

  const downloadReport = (content: string, fileFormat: string) => {
    const blob = new Blob([content], { 
      type: fileFormat === 'pdf' ? 'text/plain' : 'application/json' 
    })
    const url = URL.createObjectURL(blob)
    const a = document.createElement('a')
    a.href = url
    a.download = `barakah-report-${format(new Date(), 'yyyy-MM')}.${fileFormat === 'pdf' ? 'txt' : 'json'}`
    document.body.appendChild(a)
    a.click()
    document.body.removeChild(a)
    URL.revokeObjectURL(url)
  }

  const shareProgress = () => {
    const earnedAchievements = achievements.filter(a => a.earned).length
    const shareText = `üïå My Islamic Progress Update:

üìø Prayer Completion: ${prayerStats?.completionRate?.toFixed(1) || 0}%
üî• Current Streak: ${prayerStats?.currentStreak || 0} days
‚úÖ Task Success Rate: ${taskStats?.completionRate?.toFixed(1) || 0}%
üèÜ Achievements: ${earnedAchievements}

Alhamdulillah for the progress! ü§≤

#BarakahTasks #IslamicProductivity #SpiritualGrowth`

    if (navigator.share) {
      navigator.share({
        title: 'My Spiritual Progress',
        text: shareText,
      })
    } else {
      navigator.clipboard.writeText(shareText)
      toast({
        title: "Copied to clipboard",
        description: "Your progress summary has been copied to clipboard."
      })
    }
  }

  const periods = [
    { value: 'current-month', label: format(new Date(), 'MMMM yyyy') },
    { value: 'last-month', label: format(subMonths(new Date(), 1), 'MMMM yyyy') },
    { value: 'last-3-months', label: 'Last 3 months' },
    { value: 'this-year', label: format(new Date(), 'yyyy') }
  ]

  return (
    <div className="space-y-6">
      {/* Quick Stats */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <FileText className="h-5 w-5" />
            Progress Summary
          </CardTitle>
          <CardDescription>Your current spiritual and productivity metrics</CardDescription>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
            <div className="text-center p-3 bg-emerald-50 rounded-lg">
              <div className="text-2xl font-bold text-emerald-600">
                {prayerStats?.completionRate?.toFixed(0) || 0}%
              </div>
              <div className="text-xs text-emerald-700">Prayer Rate</div>
            </div>
            <div className="text-center p-3 bg-blue-50 rounded-lg">
              <div className="text-2xl font-bold text-blue-600">
                {prayerStats?.currentStreak || 0}
              </div>
              <div className="text-xs text-blue-700">Day Streak</div>
            </div>
            <div className="text-center p-3 bg-amber-50 rounded-lg">
              <div className="text-2xl font-bold text-amber-600">
                {taskStats?.completionRate?.toFixed(0) || 0}%
              </div>
              <div className="text-xs text-amber-700">Task Rate</div>
            </div>
            <div className="text-center p-3 bg-purple-50 rounded-lg">
              <div className="text-2xl font-bold text-purple-600">
                {achievements.filter(a => a.earned).length}
              </div>
              <div className="text-xs text-purple-700">Achievements</div>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* Export Options */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Download className="h-5 w-5" />
            Export Report
          </CardTitle>
          <CardDescription>Generate detailed progress reports for your records</CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div className="space-y-2">
              <label className="text-sm font-medium">Time Period</label>
              <Select value={selectedPeriod} onValueChange={setSelectedPeriod}>
                <SelectTrigger>
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  {periods.map(period => (
                    <SelectItem key={period.value} value={period.value}>
                      {period.label}
                    </SelectItem>
                  ))}
                </SelectContent>
              </Select>
            </div>

            <div className="space-y-2">
              <label className="text-sm font-medium">Format</label>
              <Select value={exportFormat} onValueChange={setExportFormat}>
                <SelectTrigger>
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="pdf">PDF Report</SelectItem>
                  <SelectItem value="json">JSON Data</SelectItem>
                </SelectContent>
              </Select>
            </div>
          </div>

          <div className="flex gap-2">
            <Button 
              onClick={generateReport} 
              disabled={isExporting}
              className="flex-1"
            >
              <Download className="h-4 w-4 mr-2" />
              {isExporting ? 'Generating...' : 'Generate Report'}
            </Button>
            
            <Button 
              onClick={shareProgress} 
              variant="outline"
              className="flex-1"
            >
              <Share2 className="h-4 w-4 mr-2" />
              Share Progress
            </Button>
          </div>
        </CardContent>
      </Card>

      {/* Report Preview */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Calendar className="h-5 w-5" />
            Report Preview
          </CardTitle>
          <CardDescription>Preview of what will be included in your report</CardDescription>
        </CardHeader>
        <CardContent>
          <div className="space-y-4">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
              <div className="space-y-2">
                <h4 className="font-medium">Prayer Analytics</h4>
                <ul className="space-y-1 text-muted-foreground">
                  <li>‚Ä¢ Monthly completion rates</li>
                  <li>‚Ä¢ Prayer streak records</li>
                  <li>‚Ä¢ Individual prayer statistics</li>
                  <li>‚Ä¢ Daily prayer heatmap</li>
                </ul>
              </div>
              
              <div className="space-y-2">
                <h4 className="font-medium">Task & Productivity</h4>
                <ul className="space-y-1 text-muted-foreground">
                  <li>‚Ä¢ Task completion rates</li>
                  <li>‚Ä¢ Category performance</li>
                  <li>‚Ä¢ Islamic task progress</li>
                  <li>‚Ä¢ Goal achievement metrics</li>
                </ul>
              </div>
              
              <div className="space-y-2">
                <h4 className="font-medium">Achievements</h4>
                <ul className="space-y-1 text-muted-foreground">
                  <li>‚Ä¢ Earned spiritual badges</li>
                  <li>‚Ä¢ Milestone progress</li>
                  <li>‚Ä¢ Achievement timeline</li>
                  <li>‚Ä¢ Progress recommendations</li>
                </ul>
              </div>
              
              <div className="space-y-2">
                <h4 className="font-medium">Insights</h4>
                <ul className="space-y-1 text-muted-foreground">
                  <li>‚Ä¢ Progress trends</li>
                  <li>‚Ä¢ Areas for improvement</li>
                  <li>‚Ä¢ Spiritual recommendations</li>
                  <li>‚Ä¢ Motivational quotes</li>
                </ul>
              </div>
            </div>
            
            <div className="flex flex-wrap gap-2 pt-2">
              <Badge variant="outline">
                üìä Charts & Visualizations
              </Badge>
              <Badge variant="outline">
                üìÖ Calendar Heatmaps
              </Badge>
              <Badge variant="outline">
                üèÜ Achievement Gallery
              </Badge>
              <Badge variant="outline">
                üìñ Quranic Verses
              </Badge>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  )
}